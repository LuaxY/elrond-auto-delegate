// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package genesis

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// GenesisABI is the input ABI used to generate the binding from.
const GenesisABI = "[{\"inputs\":[{\"internalType\":\"contractERC20Burnable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationNodesLimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enumGenesisSC.States\",\"name\":\"fromState\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enumGenesisSC.States\",\"name\":\"toState\",\"type\":\"uint8\"}],\"name\":\"StateChanged\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"blsHashes\",\"type\":\"bytes32[]\"}],\"name\":\"approveBlsKeyHashes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnCommittedFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeStateToFinalized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeStateToRetired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeStateToStaking\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeStateToValidating\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"internalType\":\"enumGenesisSC.States\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTotalDelegated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegationAmountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"delegationDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegationNodesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"elrondAddressHash\",\"type\":\"bytes32\"}],\"name\":\"depositDelegateStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfNodes\",\"type\":\"uint256\"}],\"name\":\"editWhitelistedAccountNumberOfNodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lostFundsAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nodePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverLostFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"blsKeyHash\",\"type\":\"bytes32\"}],\"name\":\"stakingNodeInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"stakingNodesHashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"blsKeyHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"elrondAddressHash\",\"type\":\"bytes32\"}],\"name\":\"submitStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contractERC20Burnable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"blsHashes\",\"type\":\"bytes32[]\"}],\"name\":\"unapproveBlsKeyHashes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfNodes\",\"type\":\"uint256\"}],\"name\":\"whitelistAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"whitelistedAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxNumberOfNodes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelistedAccountAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDelegatedStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"blsKeyHashes\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawPerNodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// GenesisBin is the compiled bytecode used for deploying new contracts.
var GenesisBin = "0x60806040526000600660146101000a81548160ff021916908360048111156200002457fe5b0217905550348015620000375760006000fd5b50604051620071ce380380620071ce833981810160405260608110156200005e5760006000fd5b810190808051906020019092919080519060200190929190805190602001909291905050505b5b5b5b620000976200023a60201b60201c565b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35b600082111515620001b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180620071a0602e913960400191505060405180910390fd5b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160016000508190909055508060026000508190909055506200022582826200024860201b62005de01790919060201c565b60036000508190909055505b505050620002de565b600033905062000245565b90565b600060008314156200025e5760009050620002d8565b600082840290508284828115156200027257fe5b04141515620002cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806200717f6021913960400191505060405180910390fd5b80915050620002d856505b92915050565b616e9180620002ee6000396000f3fe60806040523480156100115760006000fd5b50600436106101f55760003560e01c80638f32d59b11610110578063dec64937116100a3578063f1fec2b811610072578063f1fec2b814610a1d578063f2fde38b14610a3b578063f654503514610a80578063fc0c546a14610a9e576101f5565b8063dec6493714610960578063ecf3148c1461096a578063ed1b762f14610999578063f080edf414610a13576101f5565b8063b7894a08116100df578063b7894a081461088d578063b898d334146108ab578063baa5e239146108c9578063c3c75738146108d3576101f5565b80638f32d59b146107c35780638f63458c146107e5578063a444502b14610834578063b4c449e314610883576101f5565b8063533962f0116101885780637be7b8d2116101575780637be7b8d21461069a57806385209ee0146106a457806385e6fa51146106d05780638da5cb5b14610779576101f5565b8063533962f0146104455780635bc4d50a146104c4578063715018a6146105635780637b93367d1461056d576101f5565b80633ccfd60b116101c45780633ccfd60b146103b15780633fabd39f146103bb57806347e5c212146103ea5780634b66aecc14610427576101f5565b80631a311dbc146101fb57806334bdbcf71461029a5780633706f968146102e95780633a5b1dbf14610349576101f5565b60006000fd5b610298600480360360408110156102125760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102505760006000fd5b8201836020820111156102635760006000fd5b803590602001918460208302840111640100000000831117156102865760006000fd5b90919293909091929390505050610ae8565b005b6102e7600480360360408110156102b15760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110f9565b005b61032c600480360360208110156103005760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611500565b604051808381526020018281526020019250505060405180910390f35b61038c600480360360208110156103605760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611657565b6040518083815260200182600019166000191681526020019250505060405180910390f35b6103b9611701565b005b6103e8600480360360208110156103d25760006000fd5b8101908080359060200190929190505050611d48565b005b610425600480360360408110156104015760006000fd5b81019080803590602001909291908035600019169060200190929190505050612104565b005b61042f612544565b6040518082815260200191505060405180910390f35b6104c26004803603602081101561045c5760006000fd5b810190808035906020019064010000000081111561047a5760006000fd5b82018360208201111561048d5760006000fd5b803590602001918460208302840111640100000000831117156104b05760006000fd5b9091929390909192939050505061254d565b005b610561600480360360408110156104db5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156105195760006000fd5b82018360208201111561052c5760006000fd5b8035906020019184602083028401116401000000008311171561054f5760006000fd5b90919293909091929390505050612b57565b005b61056b613169565b005b6105b0600480360360208110156105845760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132b1565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156105fc5780820151818401525b6020810190506105e0565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561063f5780820151818401525b602081019050610623565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156106825780820151818401525b602081019050610666565b50505050905001965050505050505060405180910390f35b6106a261360a565b005b6106ac6139bd565b604051808260048111156106bc57fe5b60ff16815260200191505060405180910390f35b6106d86139d0565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156107205780820151818401525b602081019050610704565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156107635780820151818401525b602081019050610747565b5050505090500194505050505060405180910390f35b610781613bbe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107cb613bed565b604051808215151515815260200191505060405180910390f35b610832600480360360408110156107fc5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613c57565b005b6108816004803603604081101561084b5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613f8d565b005b61088b6143b8565b005b610895614552565b6040518082815260200191505060405180910390f35b6108b3614668565b6040518082815260200191505060405180910390f35b6108d1614671565b005b61095e600480360360408110156108ea5760006000fd5b81019080803590602001906401000000008111156109085760006000fd5b82018360208201111561091b5760006000fd5b8035906020019184602083028401116401000000008311171561093e5760006000fd5b90919293909091929390803560001916906020019092919050505061480b565b005b610968614e65565b005b610997600480360360208110156109815760006000fd5b8101908080359060200190929190505050614ffe565b005b6109ea600480360360408110156109b05760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919050505061537e565b604051808360001916600019168152602001821515151581526020019250505060405180910390f35b610a1b6155c3565b005b610a2561575c565b6040518082815260200191505060405180910390f35b610a7e60048036036020811015610a525760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050615765565b005b610a886157fe565b6040518082815260200191505060405180910390f35b610aa6615807565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af6613bed63ffffffff16565b1515610b6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b60036004811115610b7a57fe5b600660149054906101000a900460ff166004811115610b9557fe5b14151515610bee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a815260200180616c37604a913960600191505060405180910390fd5b60046004811115610bfb57fe5b600660149054906101000a900460ff166004811115610c1657fe5b14151515610c6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b82610c786165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015610da3578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190610d0a565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515610e27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b6000600760005060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005090506000600090505b858590508110156110eb57610eaa828787848181101515610e9457fe5b905060200201356000191661582d63ffffffff16565b1515610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180616e296034913960400191505060405180910390fd5b600960005060008787848181101515610f1657fe5b90506020020135600019166000191660001916815260200190815260200160002060009054906101000a900460ff161515610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180616c816039913960400191505060405180910390fd5b60008260040160005060008888858181101515610fb557fe5b90506020020135600019166000191660001916815260200190815260200160002060005054905060008360020160005082815481101515610ff257fe5b906000526020600020906003020160005b5090508060020160019054906101000a900460ff16151561106f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168e66034913960400191505060405180910390fd5b60008160020160006101000a81548160ff0219169083151502179055506000600960005060008a8a8781811015156110a357fe5b90506020020135600019166000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050505b8080600101915050610e77565b50505b505b505b5b5b505050565b611107613bed63ffffffff16565b151561117e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6003600481111561118b57fe5b600660149054906101000a900460ff1660048111156111a657fe5b141515156111ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a815260200180616c37604a913960600191505060405180910390fd5b6004600481111561120c57fe5b600660149054906101000a900460ff16600481111561122757fe5b14151515611280576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b816112896165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b828210156113b4578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff1615151515815260200150508152602001906001019061131b565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515611438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b6000600760005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000509050806002016000508054905084101515156114e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526054815260200180616ab46054913960600191505060405180910390fd5b8381600001600050819090905550505b505b505b5b5b5050565b60006000600760005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060030160009054906101000a900460ff1615156115b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180616c08602f913960400191505060405180910390fd5b600760005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005054600760005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506001016000505491509150611652565b915091565b60006000600860005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005054600860005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005054915091506116fc565b915091565b6000600481111561170e57fe5b600660149054906101000a900460ff16600481111561172957fe5b14151515611782576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526047815260200180616dad6047913960600191505060405180910390fd5b6002600481111561178f57fe5b600660149054906101000a900460ff1660048111156117aa57fe5b14151515611803576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526064815260200180616b086064913960800191505060405180910390fd5b3361180c6165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015611937578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff1615151515815260200150508152602001906001019061189e565b5050505081526020016003820160009054906101000a900460ff1615151515815260200150509050806060015115156119bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b6000600760005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160005080549050111515611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180616ba0602f913960400191505060405180910390fd5b60006000600760005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050905060006001826002016000508054905003905060008190505b8181111515611b745760008360020160005082815481101515611ae657fe5b906000526020600020906003020160005b5090508060020160019054906101000a900460ff161580611b2657508060020160009054906101000a900460ff165b15611b315750611b66565b611b49600160005054866158f890919063ffffffff16565b94508450611b6484826000016000505461598c63ffffffff16565b505b808060019003915050611ac7565b506000831415611bd5573373ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc60006040518082815260200191505060405180910390a2505050611d41565b611bef838360010160005054615c0b90919063ffffffff16565b82600101600050819090905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611ca65760006000fd5b505af1158015611cbb573d600060003e3d6000fd5b505050506040513d6020811015611cd25760006000fd5b81019080805190602001909291905050501515611cef5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc846040518082815260200191505060405180910390a25050505b5b505b505b565b60016004811115611d5557fe5b600660149054906101000a900460ff166004811115611d7057fe5b141515611dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180616cba604f913960600191505060405180910390fd5b80600460005054600360005054038111151515611e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526045815260200180616d686045913960600191505060405180910390fd5b600082111515611e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061699a602f913960400191505060405180910390fd5b6000600860005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005090508060020160009054906101000a900460ff161515611f3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180616d09602d913960400191505060405180910390fd5b611f578382600001600050546158f890919063ffffffff16565b81600001600050819090905550611f7c836004600050546158f890919063ffffffff16565b6004600050819090905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156120655760006000fd5b505af115801561207a573d600060003e3d6000fd5b505050506040513d60208110156120915760006000fd5b810190808051906020019092919050505015156120ae5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2846040518082815260200191505060405180910390a2505b5b505b50565b6001600481111561211157fe5b600660149054906101000a900460ff16600481111561212c57fe5b141515612184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180616cba604f913960600191505060405180910390fd5b816004600050546003600050540381111515156121ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526045815260200180616d686045913960600191505060405180910390fd5b600083111515612247576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180616df46035913960400191505060405180910390fd5b600860005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160009054906101000a900460ff161515156122f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061694f602a913960400191505060405180910390fd5b60405180606001604052808481526020018360001916815260200160011515815260200150600860005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000820151816000016000509090556020820151816001016000509060001916905560408201518160020160006101000a81548160ff0219169083151502179055509050506123bc836004600050546158f890919063ffffffff16565b6004600050819090905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156124a55760006000fd5b505af11580156124ba573d600060003e3d6000fd5b505050506040513d60208110156124d15760006000fd5b810190808051906020019092919050505015156124ee5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2846040518082815260200191505060405180910390a25b5b505b5050565b60046000505481565b6000600481111561255a57fe5b600660149054906101000a900460ff16600481111561257557fe5b141515156125ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526047815260200180616dad6047913960600191505060405180910390fd5b600260048111156125db57fe5b600660149054906101000a900460ff1660048111156125f657fe5b1415151561264f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526064815260200180616b086064913960800191505060405180910390fd5b336126586165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015612783578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020015050815260200190600101906126ea565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515612807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b6000600760005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050805490501115156128b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180616ba0602f913960400191505060405180910390fd5b60008484905011151561290e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180616d366032913960400191505060405180910390fd5b6000600760005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050905060005b858590508110156129c35761298d82878784818110151561297757fe5b9050602002013560001916615c6363ffffffff16565b6129b582878784818110151561299f57fe5b905060200201356000191661598c63ffffffff16565b5b808060010191505061295a565b5060006129e186869050600160005054615de090919063ffffffff16565b90506129fd818360010160005054615c0b90919063ffffffff16565b82600101600050819090905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612ab45760006000fd5b505af1158015612ac9573d600060003e3d6000fd5b505050506040513d6020811015612ae05760006000fd5b81019080805190602001909291905050501515612afd5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc826040518082815260200191505060405180910390a250505b5b505b505b5050565b612b65613bed63ffffffff16565b1515612bdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b60036004811115612be957fe5b600660149054906101000a900460ff166004811115612c0457fe5b14151515612c5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a815260200180616c37604a913960600191505060405180910390fd5b60046004811115612c6a57fe5b600660149054906101000a900460ff166004811115612c8557fe5b14151515612cde576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b82612ce76165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015612e12578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190612d79565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515612e96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b6000600760005060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005090506000600090505b8585905081101561315b57612f19828787848181101515612f0357fe5b905060200201356000191661582d63ffffffff16565b1515612f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180616e296034913960400191505060405180910390fd5b600960005060008787848181101515612f8557fe5b90506020020135600019166000191660001916815260200190815260200160002060009054906101000a900460ff1615151561300c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806168836032913960400191505060405180910390fd5b6000826004016000506000888885818110151561302557fe5b9050602002013560001916600019166000191681526020019081526020016000206000505490506000836002016000508281548110151561306257fe5b906000526020600020906003020160005b5090508060020160019054906101000a900460ff1615156130df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168e66034913960400191505060405180910390fd5b60018160020160006101000a81548160ff0219169083151502179055506001600960005060008a8a87818110151561311357fe5b90506020020135600019166000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050505b8080600101915050612ee6565b50505b505b505b5b5b505050565b613177613bed63ffffffff16565b15156131ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b606060606060600760005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060030160009054906101000a900460ff161515613364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180616854602f913960400191505060405180910390fd5b6060600760005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050805480602002602001604051908101604052809291908181526020016000905b8282101561346a578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020015050815260200190600101906133d1565b505050509050606081516040519080825280602002602001820160405280156134a25781602001602082028038833980820191505090505b509050606082516040519080825280602002602001820160405280156134d75781602001602082028038833980820191505090505b5090506060835160405190808252806020026020018201604052801561350c5781602001602082028038833980820191505090505b5090506000600090505b84518110156135ec57848181518110151561352d57fe5b602002602001015160000151848281518110151561354757fe5b60200260200101906000191690816000191681526020015050848181518110151561356e57fe5b602002602001015160400151838281518110151561358857fe5b60200260200101901515908115158152602001505084818151811015156135ab57fe5b60200260200101516020015182828151811015156135c557fe5b602002602001019060001916908160001916815260200150505b8080600101915050613516565b508282829650965096505050505061360356505050505b9193909250565b613618613bed63ffffffff16565b151561368f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6004600481111561369c57fe5b600660149054906101000a900460ff1660048111156136b757fe5b14151561370f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a8152602001806169c9604a913960600191505060405180910390fd5b6000600460005054905060005b600560005080549050811015613927576137346165ca565b6007600050600060056000508481548110151561374d57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b8282101561389d578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190613804565b5050505081526020016003820160009054906101000a900460ff1615151515815260200150509050806060015115156138d6575061391a565b60006138e782615e7063ffffffff16565b905061391361390482600160005054615de090919063ffffffff16565b856158f890919063ffffffff16565b9350835050505b808060010191505061371c565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561399e5760006000fd5b505af11580156139b3573d600060003e3d6000fd5b50505050505b5b5b565b600660149054906101000a900460ff1681565b606060606060600560005080549050604051908082528060200260200182016040528015613a0d5781602001602082028038833980820191505090505b5090506060600560005080549050604051908082528060200260200182016040528015613a495781602001602082028038833980820191505090505b5090506000600090505b600560005080549050811015613baa57600560005081815481101515613a7557fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181101515613ab057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681526020015050600060076000506000600560005084815481101515613b0857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050905080600001600050548383815181101515613b8a57fe5b6020026020010190908181526020015050505b8080600101915050613a53565b508181935093505050613bba5650505b9091565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050613bea565b90565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613c36615efc63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16149050613c54565b90565b613c65613bed63ffffffff16565b1515613cdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015613d7e5760006000fd5b505afa158015613d93573d600060003e3d6000fd5b505050506040513d6020811015613daa5760006000fd5b81019080805190602001909291905050509050808211151515613e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180616b6c6034913960400191505060405180910390fd5b6000613e28615f0963ffffffff16565b90506000613e3f8284615c0b90919063ffffffff16565b9050808411151515613e9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061691a6035913960400191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613f465760006000fd5b505af1158015613f5b573d600060003e3d6000fd5b505050506040513d6020811015613f725760006000fd5b8101908080519060200190929190505050505050505b5b5050565b613f9b613bed63ffffffff16565b1515614012576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6003600481111561401f57fe5b600660149054906101000a900460ff16600481111561403a57fe5b14151515614093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a815260200180616c37604a913960600191505060405180910390fd5b600460048111156140a057fe5b600660149054906101000a900460ff1660048111156140bb57fe5b14151515614114576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b8161411d6165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015614248578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020015050815260200190600101906141af565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515156142cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061662f602b913960400191505060405180910390fd5b6000600760005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000509050838160000160005081909090555060018160030160006101000a81548160ff02191690831515021790555060056000508590806001815401808255809150509060018203906000526020600020900160005b909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b505b505b5b5b5050565b6143c6613bed63ffffffff16565b151561443d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6004600481111561444a57fe5b600660149054906101000a900460ff16600481111561446557fe5b141515156144be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b7fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8600660149054906101000a900460ff1660036040518083600481111561450157fe5b60ff16815260200182600481111561451557fe5b60ff1681526020019250505060405180910390a16003600660146101000a81548160ff0219169083600481111561454857fe5b02179055505b5b5b565b60006000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156145f65760006000fd5b505afa15801561460b573d600060003e3d6000fd5b505050506040513d60208110156146225760006000fd5b810190808051906020019092919050505090506000614645615f0963ffffffff16565b905061465a8183615c0b90919063ffffffff16565b925050506146655650505b90565b60026000505481565b61467f613bed63ffffffff16565b15156146f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6004600481111561470357fe5b600660149054906101000a900460ff16600481111561471e57fe5b14151515614777576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260488152602001806167736048913960600191505060405180910390fd5b7fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8600660149054906101000a900460ff166001604051808360048111156147ba57fe5b60ff1681526020018260048111156147ce57fe5b60ff1681526020019250505060405180910390a16001600660146101000a81548160ff0219169083600481111561480157fe5b02179055505b5b5b565b6001600481111561481857fe5b600660149054906101000a900460ff16600481111561483357fe5b14151561488b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180616cba604f913960600191505060405180910390fd5b336148946165ca565b600760005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b828210156149bf578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190614926565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050905080606001511515614a43576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806168206034913960400191505060405180910390fd5b600060001b836000191614151515614aa6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806167436030913960400191505060405180910390fd5b6000600760005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000509050614c4c81604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015614bd9578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190614b40565b5050505081526020016003820160009054906101000a900460ff161515151581526020015050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061612263ffffffff16565b614c9e81878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508661618e63ffffffff16565b6000614cbb87879050600160005054615de090919063ffffffff16565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015614d9b5760006000fd5b505af1158015614db0573d600060003e3d6000fd5b505050506040513d6020811015614dc75760006000fd5b81019080805190602001909291905050501515614de45760006000fd5b614dfe8183600101600050546158f890919063ffffffff16565b826001016000508190909055503373ffffffffffffffffffffffffffffffffffffffff167f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2826040518082815260200191505060405180910390a250505b505b505b505050565b614e73613bed63ffffffff16565b1515614eea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b60036004811115614ef757fe5b600660149054906101000a900460ff166004811115614f1257fe5b141515614f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604c815260200180616a68604c913960600191505060405180910390fd5b7fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8600660149054906101000a900460ff16600460405180836004811115614fad57fe5b60ff168152602001826004811115614fc157fe5b60ff1681526020019250505060405180910390a16004600660146101000a81548160ff02191690836004811115614ff457fe5b02179055505b5b5b565b6001600481111561500b57fe5b600660149054906101000a900460ff16600481111561502657fe5b14151561507e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180616cba604f913960600191505060405180910390fd5b6000811115156150d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806166d46038913960400191505060405180910390fd5b6000600860005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005090508060020160009054906101000a900460ff16151561518b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180616d09602d913960400191505060405180910390fd5b806000016000505482111515156151ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806168b56031913960400191505060405180910390fd5b615207828260000160005054615c0b90919063ffffffff16565b8160000160005081909090555061522c82600460005054615c0b90919063ffffffff16565b6004600050819090905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156152e15760006000fd5b505af11580156152f6573d600060003e3d6000fd5b505050506040513d602081101561530d5760006000fd5b8101908080519060200190929190505050151561532a5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc836040518082815260200191505060405180910390a2505b5b50565b60006000600760005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060030160009054906101000a900460ff16151561542f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180616a13602c913960400191505060405180910390fd5b615483600760005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508461582d63ffffffff16565b15156154da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180616bcf6039913960400191505060405180910390fd5b6000600760005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050905060008160040160005060008660001916600019168152602001908152602001600020600050549050816002016000508181548110151561555f57fe5b906000526020600020906003020160005b5060010160005054826002016000508281548110151561558c57fe5b906000526020600020906003020160005b5060020160009054906101000a900460ff169350935050506155bc5650505b9250929050565b6155d1613bed63ffffffff16565b1515615648576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6001600481111561565557fe5b600660149054906101000a900460ff16600481111561567057fe5b1415156156c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180616cba604f913960600191505060405180910390fd5b7fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8600660149054906101000a900460ff1660026040518083600481111561570b57fe5b60ff16815260200182600481111561571f57fe5b60ff1681526020019250505060405180910390a16002600660146101000a81548160ff0219169083600481111561575257fe5b02179055505b5b5b565b60016000505481565b615773613bed63ffffffff16565b15156157ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281526020015060200191505060405180910390fd5b6157f9816161d963ffffffff16565b5b5b50565b60036000505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060008360020160005080549050141561584b57600090506158f2565b600083600401600050600084600019166000191681526020019081526020016000206000505490508260001916846002016000508281548110151561588c57fe5b906000526020600020906003020160005b5060000160005054600019161480156158e9575083600201600050818154811015156158c557fe5b906000526020600020906003020160005b5060020160019054906101000a900460ff165b9150506158f256505b92915050565b60006000828401905083811015151561597c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081526020015060200191505060405180910390fd5b8091505061598656505b92915050565b60008260040160005060008360001916600019168152602001908152602001600020600050549050600060018460020160005080549050039050600084600201600050838154811015156159dc57fe5b906000526020600020906003020160005b5060020160009054906101000a900460ff1690508183141515615b3c5760008560020160005083815481101515615a2057fe5b906000526020600020906003020160005b506000016000505490508386600401600050600083600019166000191681526020019081526020016000206000508190909055508560020160005083815481101515615a7957fe5b906000526020600020906003020160005b508660020160005085815481101515615a9f57fe5b906000526020600020906003020160005b5060008201600050548160000160005090600019169055600182016000505481600101600050906000191690556002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055506002820160019054906101000a900460ff168160020160016101000a81548160ff021916908315150217905550905050505b8015615b715760096000506000856000191660001916815260200190815260200160002060006101000a81549060ff02191690555b846002016000508054801515615b8357fe5b600190038181906000526020600020906003020160005b600082016000506000905560018201600050600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff0219169055505090558460040160005060008560001916600019168152602001908152602001600020600050600090555050505b5050565b6000615c5683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081526020015061632263ffffffff16565b9050615c5d565b92915050565b615c73828261582d63ffffffff16565b1515615cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180616e296034913960400191505060405180910390fd5b60036004811115615cd757fe5b600660149054906101000a900460ff166004811115615cf257fe5b1480615d23575060046004811115615d0657fe5b600660149054906101000a900460ff166004811115615d2157fe5b145b15615ddb5781600201600050826004016000506000836000191660001916815260200190815260200160002060005054815481101515615d5f57fe5b906000526020600020906003020160005b5060020160009054906101000a900460ff16151515615dda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252605481526020018061665a6054913960600191505060405180910390fd5b5b5b5050565b60006000831415615df45760009050615e6a565b60008284029050828482811515615e0757fe5b04141515615e60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806169796021913960400191505060405180910390fd5b80915050615e6a56505b92915050565b60006000600090506000600090505b836040015151811015615eec57836040015181815181101515615e9e57fe5b6020026020010151606001518015615ed05750836040015181815181101515615ec357fe5b6020026020010151604001515b15615ede5781806001019250505b5b8080600101915050615e7f565b5080915050615ef756505b919050565b6000339050615f06565b90565b60006000600460005054905060005b60056000508054905081101561611457615f306165ca565b60076000506000600560005084815481101515615f4957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050805480602002602001604051908101604052809291908181526020016000905b82821015616099578382906000526020600020906003020160005b506040518060800160405290816000820160005054600019166000191681526020016001820160005054600019166000191681526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff16151515158152602001505081526020019060010190616000565b5050505081526020016003820160009054906101000a900460ff1615151515815260200150509050806060015115156160d25750616107565b6161016160f2826040015151600160005054615de090919063ffffffff16565b846158f890919063ffffffff16565b92508250505b8080600101915050615f18565b508091505061611f56505b90565b805182604001515101826000015110151515616189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260658152602001806167bb6065913960800191505060405180910390fd5b5b5050565b6000600090505b82518110156161d2576161c48484838151811015156161b057fe5b6020026020010151846163eb63ffffffff16565b5b8080600101915050616195565b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515616261576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806166ae6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600083831115829015156163d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156163975780820151818401525b60208101905061637b565b50505050905090810190601f1680156163c45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150506163e456505b9392505050565b600060001b82600019161415151561644e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180616a3f6029913960400191505060405180910390fd5b61645e838361582d63ffffffff16565b1515156164b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603781526020018061670c6037913960400191505060405180910390fd5b826002016000508054905083600401600050600084600019166000191681526020019081526020016000206000508190909055506164f26165f7565b60405180608001604052808460001916815260200183600019168152602001600015158152602001600115158152602001509050836002016000508190806001815401808255809150509060018203906000526020600020906003020160005b9091929091909150600082015181600001600050906000191690556020820151816001016000509060001916905560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff021916908315150217905550505050505b505050565b60405180608001604052806000815260200160008152602001606081526020016000151581526020015090565b604051806080016040528060006000191681526020016000600019168152602001600015158152602001600015158152602001509056fe5b56616c69646174696f6e5d204164647265737320697320616c72656164792077686974656c69737465645b56616c69646174696f6e5d20424c53206b65792077617320616c726561647920617070726f7665642c20796f752063616e6e6f7420776974686472617720746865206173736f63696174656420616d6f756e744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735b56616c69646174696f6e5d2054686520776974686472617720616d6f756e742068617320746f206265206c6172676572207468616e20305b56616c69646174696f6e5d20424c53206b65792077617320616c726561647920616464656420666f722074686973206163636f756e745b56616c69646174696f6e5d20456c726f6e64206164647265737320686173682073686f756c64206e6f7420626520305b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e6e6f742062652063616c6c6564207768656e2074686520636f6e747261637420697320726574697265645b56616c69646174696f6e5d20416464696e672074686973206d616e79206e6f64657320776f756c642065786365656420746865206d6178696d756d206e756d626572206f6620616c6c6f776564206e6f646573207065722074686973206163636f756e745b56616c69646174696f6e5d205468652070726f76696465642061646472657373206973206e6f742077686974656c69737465645b5374616b696e674e6f6465734861736865735d2041646472657373206973206e6f742077686974656c69737465645b56616c69646174696f6e5d2050726f766964656420424c53206b65792077617320616c726561647920617070726f7665645b56616c69646174696f6e5d204e6f7420656e6f756768207374616b65206465706f73697420746f2077697468647261775b56616c69646174696f6e5d20426c73206b657920646f6573206e6f7420657869737420666f722074686973206163636f756e745b56616c69646174696f6e5d205265636f76657220616d6f756e742065786365656473206c6f73742066756e647320616d6f756e745b56616c69646174696f6e5d20596f7520616c72656164792064656c6567617465642061207374616b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775b56616c69646174696f6e5d2054686520616d6f756e742068617320746f206265206c6172676572207468616e20305b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e2062652063616c6c6564206f6e6c79207768656e2074686520636f6e747261637420697320726574697265645b5374616b696e674e6f6465496e666f5d2041646472657373206973206e6f742077686974656c69737465645b56616c69646174696f6e5d20424c53206b657920686173682073686f756c64206e6f7420626520305b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e2062652063616c6c6564206f6e6c79207768656e2074686520636f6e74726163742069732066696e616c697a65645b56616c69646174696f6e5d2057686974656c6973746564206163636f756e7420616c7265616479207375626d6974746564206d6f7265206e6f646573207468616e20796f75207769736820746f20616c6c6f775b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e6e6f742062652063616c6c6564207768696c6520796f7572207375626d6974746564206e6f6465732061726520696e207468652076616c69646174696f6e2070726f636573735b56616c69646174696f6e5d205265636f76657220616d6f756e74206578636565647320636f6e74726163742062616c616e63655b56616c69646174696f6e5d20596f7572206163636f756e74206861732030206e6f646573207375626d69747465645b5374616b696e674e6f6465496e666f5d204164647265737320646f6573206e6f742068617665207468652070726f7669646564206e6f64655b57686974656c6973746564416464726573735d2041646472657373206973206e6f742077686974656c69737465645b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e6e6f742062652063616c6c6564207768656e2074686520636f6e74726163742069732066696e616c697a65645b56616c69646174696f6e5d2050726f766964656420424c53206b657920776173206e6f742070726576696f75736c7920617070726f7665645b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e2062652063616c6c6564206f6e6c79207768656e20636f6e747261637420697320696e207374616b696e672070686173655b56616c69646174696f6e5d20596f7520646f6e2774206861766520612064656c656761746564207374616b655b56616c69646174696f6e5d20596f75206d7573742070726f76696465206174206c65617374206f6e6520424c53206b65795b4465706f73697444656c65676174655374616b655d20596f7572206465706f73697420776f756c6420657863656564207468652064656c65676174696f6e206c696d69745b56616c69646174696f6e5d20546869732066756e6374696f6e2063616e6e6f742062652063616c6c656420696e2074686520696e697469616c697a6174696f6e2070686173655b56616c69646174696f6e5d20546865207374616b6520616d6f756e742068617320746f206265206c6172676572207468616e20305b56616c69646174696f6e5d20424c53206b657920646f6573206e6f7420657869737420666f722074686973206163636f756e74a265627a7a72315820fc085b9307c27584f183876f63e237bce2b038c7513e241003b6e03f19c76ac264736f6c634300050f0032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775b56616c69646174696f6e5d204e6f6465207072696365206d7573742062652067726561746572207468616e2030"

// DeployGenesis deploys a new Ethereum contract, binding an instance of Genesis to it.
func DeployGenesis(auth *bind.TransactOpts, backend bind.ContractBackend, _token common.Address, _nodePrice *big.Int, _delegationNodesLimit *big.Int) (common.Address, *types.Transaction, *Genesis, error) {
	parsed, err := abi.JSON(strings.NewReader(GenesisABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(GenesisBin), backend, _token, _nodePrice, _delegationNodesLimit)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Genesis{GenesisCaller: GenesisCaller{contract: contract}, GenesisTransactor: GenesisTransactor{contract: contract}, GenesisFilterer: GenesisFilterer{contract: contract}}, nil
}

// Genesis is an auto generated Go binding around an Ethereum contract.
type Genesis struct {
	GenesisCaller     // Read-only binding to the contract
	GenesisTransactor // Write-only binding to the contract
	GenesisFilterer   // Log filterer for contract events
}

// GenesisCaller is an auto generated read-only Go binding around an Ethereum contract.
type GenesisCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenesisTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GenesisTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenesisFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GenesisFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenesisSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GenesisSession struct {
	Contract     *Genesis          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GenesisCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GenesisCallerSession struct {
	Contract *GenesisCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// GenesisTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GenesisTransactorSession struct {
	Contract     *GenesisTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// GenesisRaw is an auto generated low-level Go binding around an Ethereum contract.
type GenesisRaw struct {
	Contract *Genesis // Generic contract binding to access the raw methods on
}

// GenesisCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GenesisCallerRaw struct {
	Contract *GenesisCaller // Generic read-only contract binding to access the raw methods on
}

// GenesisTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GenesisTransactorRaw struct {
	Contract *GenesisTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGenesis creates a new instance of Genesis, bound to a specific deployed contract.
func NewGenesis(address common.Address, backend bind.ContractBackend) (*Genesis, error) {
	contract, err := bindGenesis(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Genesis{GenesisCaller: GenesisCaller{contract: contract}, GenesisTransactor: GenesisTransactor{contract: contract}, GenesisFilterer: GenesisFilterer{contract: contract}}, nil
}

// NewGenesisCaller creates a new read-only instance of Genesis, bound to a specific deployed contract.
func NewGenesisCaller(address common.Address, caller bind.ContractCaller) (*GenesisCaller, error) {
	contract, err := bindGenesis(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GenesisCaller{contract: contract}, nil
}

// NewGenesisTransactor creates a new write-only instance of Genesis, bound to a specific deployed contract.
func NewGenesisTransactor(address common.Address, transactor bind.ContractTransactor) (*GenesisTransactor, error) {
	contract, err := bindGenesis(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GenesisTransactor{contract: contract}, nil
}

// NewGenesisFilterer creates a new log filterer instance of Genesis, bound to a specific deployed contract.
func NewGenesisFilterer(address common.Address, filterer bind.ContractFilterer) (*GenesisFilterer, error) {
	contract, err := bindGenesis(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GenesisFilterer{contract: contract}, nil
}

// bindGenesis binds a generic wrapper to an already deployed contract.
func bindGenesis(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(GenesisABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Genesis *GenesisRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Genesis.Contract.GenesisCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Genesis *GenesisRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.Contract.GenesisTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Genesis *GenesisRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Genesis.Contract.GenesisTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Genesis *GenesisCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Genesis.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Genesis *GenesisTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Genesis *GenesisTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Genesis.Contract.contract.Transact(opts, method, params...)
}

// ContractState is a free data retrieval call binding the contract method 0x85209ee0.
//
// Solidity: function contractState() view returns(uint8)
func (_Genesis *GenesisCaller) ContractState(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "contractState")
	return *ret0, err
}

// ContractState is a free data retrieval call binding the contract method 0x85209ee0.
//
// Solidity: function contractState() view returns(uint8)
func (_Genesis *GenesisSession) ContractState() (uint8, error) {
	return _Genesis.Contract.ContractState(&_Genesis.CallOpts)
}

// ContractState is a free data retrieval call binding the contract method 0x85209ee0.
//
// Solidity: function contractState() view returns(uint8)
func (_Genesis *GenesisCallerSession) ContractState() (uint8, error) {
	return _Genesis.Contract.ContractState(&_Genesis.CallOpts)
}

// CurrentTotalDelegated is a free data retrieval call binding the contract method 0x4b66aecc.
//
// Solidity: function currentTotalDelegated() view returns(uint256)
func (_Genesis *GenesisCaller) CurrentTotalDelegated(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "currentTotalDelegated")
	return *ret0, err
}

// CurrentTotalDelegated is a free data retrieval call binding the contract method 0x4b66aecc.
//
// Solidity: function currentTotalDelegated() view returns(uint256)
func (_Genesis *GenesisSession) CurrentTotalDelegated() (*big.Int, error) {
	return _Genesis.Contract.CurrentTotalDelegated(&_Genesis.CallOpts)
}

// CurrentTotalDelegated is a free data retrieval call binding the contract method 0x4b66aecc.
//
// Solidity: function currentTotalDelegated() view returns(uint256)
func (_Genesis *GenesisCallerSession) CurrentTotalDelegated() (*big.Int, error) {
	return _Genesis.Contract.CurrentTotalDelegated(&_Genesis.CallOpts)
}

// DelegationAmountLimit is a free data retrieval call binding the contract method 0xf6545035.
//
// Solidity: function delegationAmountLimit() view returns(uint256)
func (_Genesis *GenesisCaller) DelegationAmountLimit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "delegationAmountLimit")
	return *ret0, err
}

// DelegationAmountLimit is a free data retrieval call binding the contract method 0xf6545035.
//
// Solidity: function delegationAmountLimit() view returns(uint256)
func (_Genesis *GenesisSession) DelegationAmountLimit() (*big.Int, error) {
	return _Genesis.Contract.DelegationAmountLimit(&_Genesis.CallOpts)
}

// DelegationAmountLimit is a free data retrieval call binding the contract method 0xf6545035.
//
// Solidity: function delegationAmountLimit() view returns(uint256)
func (_Genesis *GenesisCallerSession) DelegationAmountLimit() (*big.Int, error) {
	return _Genesis.Contract.DelegationAmountLimit(&_Genesis.CallOpts)
}

// DelegationDeposit is a free data retrieval call binding the contract method 0x3a5b1dbf.
//
// Solidity: function delegationDeposit(address who) view returns(uint256, bytes32)
func (_Genesis *GenesisCaller) DelegationDeposit(opts *bind.CallOpts, who common.Address) (*big.Int, [32]byte, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new([32]byte)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Genesis.contract.Call(opts, out, "delegationDeposit", who)
	return *ret0, *ret1, err
}

// DelegationDeposit is a free data retrieval call binding the contract method 0x3a5b1dbf.
//
// Solidity: function delegationDeposit(address who) view returns(uint256, bytes32)
func (_Genesis *GenesisSession) DelegationDeposit(who common.Address) (*big.Int, [32]byte, error) {
	return _Genesis.Contract.DelegationDeposit(&_Genesis.CallOpts, who)
}

// DelegationDeposit is a free data retrieval call binding the contract method 0x3a5b1dbf.
//
// Solidity: function delegationDeposit(address who) view returns(uint256, bytes32)
func (_Genesis *GenesisCallerSession) DelegationDeposit(who common.Address) (*big.Int, [32]byte, error) {
	return _Genesis.Contract.DelegationDeposit(&_Genesis.CallOpts, who)
}

// DelegationNodesLimit is a free data retrieval call binding the contract method 0xb898d334.
//
// Solidity: function delegationNodesLimit() view returns(uint256)
func (_Genesis *GenesisCaller) DelegationNodesLimit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "delegationNodesLimit")
	return *ret0, err
}

// DelegationNodesLimit is a free data retrieval call binding the contract method 0xb898d334.
//
// Solidity: function delegationNodesLimit() view returns(uint256)
func (_Genesis *GenesisSession) DelegationNodesLimit() (*big.Int, error) {
	return _Genesis.Contract.DelegationNodesLimit(&_Genesis.CallOpts)
}

// DelegationNodesLimit is a free data retrieval call binding the contract method 0xb898d334.
//
// Solidity: function delegationNodesLimit() view returns(uint256)
func (_Genesis *GenesisCallerSession) DelegationNodesLimit() (*big.Int, error) {
	return _Genesis.Contract.DelegationNodesLimit(&_Genesis.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() view returns(bool)
func (_Genesis *GenesisCaller) IsOwner(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "isOwner")
	return *ret0, err
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() view returns(bool)
func (_Genesis *GenesisSession) IsOwner() (bool, error) {
	return _Genesis.Contract.IsOwner(&_Genesis.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() view returns(bool)
func (_Genesis *GenesisCallerSession) IsOwner() (bool, error) {
	return _Genesis.Contract.IsOwner(&_Genesis.CallOpts)
}

// LostFundsAmount is a free data retrieval call binding the contract method 0xb7894a08.
//
// Solidity: function lostFundsAmount() view returns(uint256)
func (_Genesis *GenesisCaller) LostFundsAmount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "lostFundsAmount")
	return *ret0, err
}

// LostFundsAmount is a free data retrieval call binding the contract method 0xb7894a08.
//
// Solidity: function lostFundsAmount() view returns(uint256)
func (_Genesis *GenesisSession) LostFundsAmount() (*big.Int, error) {
	return _Genesis.Contract.LostFundsAmount(&_Genesis.CallOpts)
}

// LostFundsAmount is a free data retrieval call binding the contract method 0xb7894a08.
//
// Solidity: function lostFundsAmount() view returns(uint256)
func (_Genesis *GenesisCallerSession) LostFundsAmount() (*big.Int, error) {
	return _Genesis.Contract.LostFundsAmount(&_Genesis.CallOpts)
}

// NodePrice is a free data retrieval call binding the contract method 0xf1fec2b8.
//
// Solidity: function nodePrice() view returns(uint256)
func (_Genesis *GenesisCaller) NodePrice(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "nodePrice")
	return *ret0, err
}

// NodePrice is a free data retrieval call binding the contract method 0xf1fec2b8.
//
// Solidity: function nodePrice() view returns(uint256)
func (_Genesis *GenesisSession) NodePrice() (*big.Int, error) {
	return _Genesis.Contract.NodePrice(&_Genesis.CallOpts)
}

// NodePrice is a free data retrieval call binding the contract method 0xf1fec2b8.
//
// Solidity: function nodePrice() view returns(uint256)
func (_Genesis *GenesisCallerSession) NodePrice() (*big.Int, error) {
	return _Genesis.Contract.NodePrice(&_Genesis.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Genesis *GenesisCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Genesis *GenesisSession) Owner() (common.Address, error) {
	return _Genesis.Contract.Owner(&_Genesis.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Genesis *GenesisCallerSession) Owner() (common.Address, error) {
	return _Genesis.Contract.Owner(&_Genesis.CallOpts)
}

// StakingNodeInfo is a free data retrieval call binding the contract method 0xed1b762f.
//
// Solidity: function stakingNodeInfo(address who, bytes32 blsKeyHash) view returns(bytes32, bool)
func (_Genesis *GenesisCaller) StakingNodeInfo(opts *bind.CallOpts, who common.Address, blsKeyHash [32]byte) ([32]byte, bool, error) {
	var (
		ret0 = new([32]byte)
		ret1 = new(bool)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Genesis.contract.Call(opts, out, "stakingNodeInfo", who, blsKeyHash)
	return *ret0, *ret1, err
}

// StakingNodeInfo is a free data retrieval call binding the contract method 0xed1b762f.
//
// Solidity: function stakingNodeInfo(address who, bytes32 blsKeyHash) view returns(bytes32, bool)
func (_Genesis *GenesisSession) StakingNodeInfo(who common.Address, blsKeyHash [32]byte) ([32]byte, bool, error) {
	return _Genesis.Contract.StakingNodeInfo(&_Genesis.CallOpts, who, blsKeyHash)
}

// StakingNodeInfo is a free data retrieval call binding the contract method 0xed1b762f.
//
// Solidity: function stakingNodeInfo(address who, bytes32 blsKeyHash) view returns(bytes32, bool)
func (_Genesis *GenesisCallerSession) StakingNodeInfo(who common.Address, blsKeyHash [32]byte) ([32]byte, bool, error) {
	return _Genesis.Contract.StakingNodeInfo(&_Genesis.CallOpts, who, blsKeyHash)
}

// StakingNodesHashes is a free data retrieval call binding the contract method 0x7b93367d.
//
// Solidity: function stakingNodesHashes(address who) view returns(bytes32[], bool[], bytes32[])
func (_Genesis *GenesisCaller) StakingNodesHashes(opts *bind.CallOpts, who common.Address) ([][32]byte, []bool, [][32]byte, error) {
	var (
		ret0 = new([][32]byte)
		ret1 = new([]bool)
		ret2 = new([][32]byte)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Genesis.contract.Call(opts, out, "stakingNodesHashes", who)
	return *ret0, *ret1, *ret2, err
}

// StakingNodesHashes is a free data retrieval call binding the contract method 0x7b93367d.
//
// Solidity: function stakingNodesHashes(address who) view returns(bytes32[], bool[], bytes32[])
func (_Genesis *GenesisSession) StakingNodesHashes(who common.Address) ([][32]byte, []bool, [][32]byte, error) {
	return _Genesis.Contract.StakingNodesHashes(&_Genesis.CallOpts, who)
}

// StakingNodesHashes is a free data retrieval call binding the contract method 0x7b93367d.
//
// Solidity: function stakingNodesHashes(address who) view returns(bytes32[], bool[], bytes32[])
func (_Genesis *GenesisCallerSession) StakingNodesHashes(who common.Address) ([][32]byte, []bool, [][32]byte, error) {
	return _Genesis.Contract.StakingNodesHashes(&_Genesis.CallOpts, who)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_Genesis *GenesisCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Genesis.contract.Call(opts, out, "token")
	return *ret0, err
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_Genesis *GenesisSession) Token() (common.Address, error) {
	return _Genesis.Contract.Token(&_Genesis.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_Genesis *GenesisCallerSession) Token() (common.Address, error) {
	return _Genesis.Contract.Token(&_Genesis.CallOpts)
}

// WhitelistedAccount is a free data retrieval call binding the contract method 0x3706f968.
//
// Solidity: function whitelistedAccount(address who) view returns(uint256 maxNumberOfNodes, uint256 amountStaked)
func (_Genesis *GenesisCaller) WhitelistedAccount(opts *bind.CallOpts, who common.Address) (struct {
	MaxNumberOfNodes *big.Int
	AmountStaked     *big.Int
}, error) {
	ret := new(struct {
		MaxNumberOfNodes *big.Int
		AmountStaked     *big.Int
	})
	out := ret
	err := _Genesis.contract.Call(opts, out, "whitelistedAccount", who)
	return *ret, err
}

// WhitelistedAccount is a free data retrieval call binding the contract method 0x3706f968.
//
// Solidity: function whitelistedAccount(address who) view returns(uint256 maxNumberOfNodes, uint256 amountStaked)
func (_Genesis *GenesisSession) WhitelistedAccount(who common.Address) (struct {
	MaxNumberOfNodes *big.Int
	AmountStaked     *big.Int
}, error) {
	return _Genesis.Contract.WhitelistedAccount(&_Genesis.CallOpts, who)
}

// WhitelistedAccount is a free data retrieval call binding the contract method 0x3706f968.
//
// Solidity: function whitelistedAccount(address who) view returns(uint256 maxNumberOfNodes, uint256 amountStaked)
func (_Genesis *GenesisCallerSession) WhitelistedAccount(who common.Address) (struct {
	MaxNumberOfNodes *big.Int
	AmountStaked     *big.Int
}, error) {
	return _Genesis.Contract.WhitelistedAccount(&_Genesis.CallOpts, who)
}

// WhitelistedAccountAddresses is a free data retrieval call binding the contract method 0x85e6fa51.
//
// Solidity: function whitelistedAccountAddresses() view returns(address[], uint256[])
func (_Genesis *GenesisCaller) WhitelistedAccountAddresses(opts *bind.CallOpts) ([]common.Address, []*big.Int, error) {
	var (
		ret0 = new([]common.Address)
		ret1 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Genesis.contract.Call(opts, out, "whitelistedAccountAddresses")
	return *ret0, *ret1, err
}

// WhitelistedAccountAddresses is a free data retrieval call binding the contract method 0x85e6fa51.
//
// Solidity: function whitelistedAccountAddresses() view returns(address[], uint256[])
func (_Genesis *GenesisSession) WhitelistedAccountAddresses() ([]common.Address, []*big.Int, error) {
	return _Genesis.Contract.WhitelistedAccountAddresses(&_Genesis.CallOpts)
}

// WhitelistedAccountAddresses is a free data retrieval call binding the contract method 0x85e6fa51.
//
// Solidity: function whitelistedAccountAddresses() view returns(address[], uint256[])
func (_Genesis *GenesisCallerSession) WhitelistedAccountAddresses() ([]common.Address, []*big.Int, error) {
	return _Genesis.Contract.WhitelistedAccountAddresses(&_Genesis.CallOpts)
}

// ApproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x5bc4d50a.
//
// Solidity: function approveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisTransactor) ApproveBlsKeyHashes(opts *bind.TransactOpts, who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "approveBlsKeyHashes", who, blsHashes)
}

// ApproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x5bc4d50a.
//
// Solidity: function approveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisSession) ApproveBlsKeyHashes(who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.ApproveBlsKeyHashes(&_Genesis.TransactOpts, who, blsHashes)
}

// ApproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x5bc4d50a.
//
// Solidity: function approveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisTransactorSession) ApproveBlsKeyHashes(who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.ApproveBlsKeyHashes(&_Genesis.TransactOpts, who, blsHashes)
}

// BurnCommittedFunds is a paid mutator transaction binding the contract method 0x7be7b8d2.
//
// Solidity: function burnCommittedFunds() returns()
func (_Genesis *GenesisTransactor) BurnCommittedFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "burnCommittedFunds")
}

// BurnCommittedFunds is a paid mutator transaction binding the contract method 0x7be7b8d2.
//
// Solidity: function burnCommittedFunds() returns()
func (_Genesis *GenesisSession) BurnCommittedFunds() (*types.Transaction, error) {
	return _Genesis.Contract.BurnCommittedFunds(&_Genesis.TransactOpts)
}

// BurnCommittedFunds is a paid mutator transaction binding the contract method 0x7be7b8d2.
//
// Solidity: function burnCommittedFunds() returns()
func (_Genesis *GenesisTransactorSession) BurnCommittedFunds() (*types.Transaction, error) {
	return _Genesis.Contract.BurnCommittedFunds(&_Genesis.TransactOpts)
}

// ChangeStateToFinalized is a paid mutator transaction binding the contract method 0xb4c449e3.
//
// Solidity: function changeStateToFinalized() returns()
func (_Genesis *GenesisTransactor) ChangeStateToFinalized(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "changeStateToFinalized")
}

// ChangeStateToFinalized is a paid mutator transaction binding the contract method 0xb4c449e3.
//
// Solidity: function changeStateToFinalized() returns()
func (_Genesis *GenesisSession) ChangeStateToFinalized() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToFinalized(&_Genesis.TransactOpts)
}

// ChangeStateToFinalized is a paid mutator transaction binding the contract method 0xb4c449e3.
//
// Solidity: function changeStateToFinalized() returns()
func (_Genesis *GenesisTransactorSession) ChangeStateToFinalized() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToFinalized(&_Genesis.TransactOpts)
}

// ChangeStateToRetired is a paid mutator transaction binding the contract method 0xdec64937.
//
// Solidity: function changeStateToRetired() returns()
func (_Genesis *GenesisTransactor) ChangeStateToRetired(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "changeStateToRetired")
}

// ChangeStateToRetired is a paid mutator transaction binding the contract method 0xdec64937.
//
// Solidity: function changeStateToRetired() returns()
func (_Genesis *GenesisSession) ChangeStateToRetired() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToRetired(&_Genesis.TransactOpts)
}

// ChangeStateToRetired is a paid mutator transaction binding the contract method 0xdec64937.
//
// Solidity: function changeStateToRetired() returns()
func (_Genesis *GenesisTransactorSession) ChangeStateToRetired() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToRetired(&_Genesis.TransactOpts)
}

// ChangeStateToStaking is a paid mutator transaction binding the contract method 0xbaa5e239.
//
// Solidity: function changeStateToStaking() returns()
func (_Genesis *GenesisTransactor) ChangeStateToStaking(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "changeStateToStaking")
}

// ChangeStateToStaking is a paid mutator transaction binding the contract method 0xbaa5e239.
//
// Solidity: function changeStateToStaking() returns()
func (_Genesis *GenesisSession) ChangeStateToStaking() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToStaking(&_Genesis.TransactOpts)
}

// ChangeStateToStaking is a paid mutator transaction binding the contract method 0xbaa5e239.
//
// Solidity: function changeStateToStaking() returns()
func (_Genesis *GenesisTransactorSession) ChangeStateToStaking() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToStaking(&_Genesis.TransactOpts)
}

// ChangeStateToValidating is a paid mutator transaction binding the contract method 0xf080edf4.
//
// Solidity: function changeStateToValidating() returns()
func (_Genesis *GenesisTransactor) ChangeStateToValidating(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "changeStateToValidating")
}

// ChangeStateToValidating is a paid mutator transaction binding the contract method 0xf080edf4.
//
// Solidity: function changeStateToValidating() returns()
func (_Genesis *GenesisSession) ChangeStateToValidating() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToValidating(&_Genesis.TransactOpts)
}

// ChangeStateToValidating is a paid mutator transaction binding the contract method 0xf080edf4.
//
// Solidity: function changeStateToValidating() returns()
func (_Genesis *GenesisTransactorSession) ChangeStateToValidating() (*types.Transaction, error) {
	return _Genesis.Contract.ChangeStateToValidating(&_Genesis.TransactOpts)
}

// DepositDelegateStake is a paid mutator transaction binding the contract method 0x47e5c212.
//
// Solidity: function depositDelegateStake(uint256 amount, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisTransactor) DepositDelegateStake(opts *bind.TransactOpts, amount *big.Int, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "depositDelegateStake", amount, elrondAddressHash)
}

// DepositDelegateStake is a paid mutator transaction binding the contract method 0x47e5c212.
//
// Solidity: function depositDelegateStake(uint256 amount, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisSession) DepositDelegateStake(amount *big.Int, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.DepositDelegateStake(&_Genesis.TransactOpts, amount, elrondAddressHash)
}

// DepositDelegateStake is a paid mutator transaction binding the contract method 0x47e5c212.
//
// Solidity: function depositDelegateStake(uint256 amount, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisTransactorSession) DepositDelegateStake(amount *big.Int, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.DepositDelegateStake(&_Genesis.TransactOpts, amount, elrondAddressHash)
}

// EditWhitelistedAccountNumberOfNodes is a paid mutator transaction binding the contract method 0x34bdbcf7.
//
// Solidity: function editWhitelistedAccountNumberOfNodes(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisTransactor) EditWhitelistedAccountNumberOfNodes(opts *bind.TransactOpts, who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "editWhitelistedAccountNumberOfNodes", who, numberOfNodes)
}

// EditWhitelistedAccountNumberOfNodes is a paid mutator transaction binding the contract method 0x34bdbcf7.
//
// Solidity: function editWhitelistedAccountNumberOfNodes(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisSession) EditWhitelistedAccountNumberOfNodes(who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.EditWhitelistedAccountNumberOfNodes(&_Genesis.TransactOpts, who, numberOfNodes)
}

// EditWhitelistedAccountNumberOfNodes is a paid mutator transaction binding the contract method 0x34bdbcf7.
//
// Solidity: function editWhitelistedAccountNumberOfNodes(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisTransactorSession) EditWhitelistedAccountNumberOfNodes(who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.EditWhitelistedAccountNumberOfNodes(&_Genesis.TransactOpts, who, numberOfNodes)
}

// IncreaseDelegatedAmount is a paid mutator transaction binding the contract method 0x3fabd39f.
//
// Solidity: function increaseDelegatedAmount(uint256 amount) returns()
func (_Genesis *GenesisTransactor) IncreaseDelegatedAmount(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "increaseDelegatedAmount", amount)
}

// IncreaseDelegatedAmount is a paid mutator transaction binding the contract method 0x3fabd39f.
//
// Solidity: function increaseDelegatedAmount(uint256 amount) returns()
func (_Genesis *GenesisSession) IncreaseDelegatedAmount(amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.IncreaseDelegatedAmount(&_Genesis.TransactOpts, amount)
}

// IncreaseDelegatedAmount is a paid mutator transaction binding the contract method 0x3fabd39f.
//
// Solidity: function increaseDelegatedAmount(uint256 amount) returns()
func (_Genesis *GenesisTransactorSession) IncreaseDelegatedAmount(amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.IncreaseDelegatedAmount(&_Genesis.TransactOpts, amount)
}

// RecoverLostFunds is a paid mutator transaction binding the contract method 0x8f63458c.
//
// Solidity: function recoverLostFunds(address who, uint256 amount) returns()
func (_Genesis *GenesisTransactor) RecoverLostFunds(opts *bind.TransactOpts, who common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "recoverLostFunds", who, amount)
}

// RecoverLostFunds is a paid mutator transaction binding the contract method 0x8f63458c.
//
// Solidity: function recoverLostFunds(address who, uint256 amount) returns()
func (_Genesis *GenesisSession) RecoverLostFunds(who common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.RecoverLostFunds(&_Genesis.TransactOpts, who, amount)
}

// RecoverLostFunds is a paid mutator transaction binding the contract method 0x8f63458c.
//
// Solidity: function recoverLostFunds(address who, uint256 amount) returns()
func (_Genesis *GenesisTransactorSession) RecoverLostFunds(who common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.RecoverLostFunds(&_Genesis.TransactOpts, who, amount)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Genesis *GenesisTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Genesis *GenesisSession) RenounceOwnership() (*types.Transaction, error) {
	return _Genesis.Contract.RenounceOwnership(&_Genesis.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Genesis *GenesisTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Genesis.Contract.RenounceOwnership(&_Genesis.TransactOpts)
}

// SubmitStake is a paid mutator transaction binding the contract method 0xc3c75738.
//
// Solidity: function submitStake(bytes32[] blsKeyHashes, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisTransactor) SubmitStake(opts *bind.TransactOpts, blsKeyHashes [][32]byte, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "submitStake", blsKeyHashes, elrondAddressHash)
}

// SubmitStake is a paid mutator transaction binding the contract method 0xc3c75738.
//
// Solidity: function submitStake(bytes32[] blsKeyHashes, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisSession) SubmitStake(blsKeyHashes [][32]byte, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.SubmitStake(&_Genesis.TransactOpts, blsKeyHashes, elrondAddressHash)
}

// SubmitStake is a paid mutator transaction binding the contract method 0xc3c75738.
//
// Solidity: function submitStake(bytes32[] blsKeyHashes, bytes32 elrondAddressHash) returns()
func (_Genesis *GenesisTransactorSession) SubmitStake(blsKeyHashes [][32]byte, elrondAddressHash [32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.SubmitStake(&_Genesis.TransactOpts, blsKeyHashes, elrondAddressHash)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Genesis *GenesisTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Genesis *GenesisSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Genesis.Contract.TransferOwnership(&_Genesis.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Genesis *GenesisTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Genesis.Contract.TransferOwnership(&_Genesis.TransactOpts, newOwner)
}

// UnapproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x1a311dbc.
//
// Solidity: function unapproveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisTransactor) UnapproveBlsKeyHashes(opts *bind.TransactOpts, who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "unapproveBlsKeyHashes", who, blsHashes)
}

// UnapproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x1a311dbc.
//
// Solidity: function unapproveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisSession) UnapproveBlsKeyHashes(who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.UnapproveBlsKeyHashes(&_Genesis.TransactOpts, who, blsHashes)
}

// UnapproveBlsKeyHashes is a paid mutator transaction binding the contract method 0x1a311dbc.
//
// Solidity: function unapproveBlsKeyHashes(address who, bytes32[] blsHashes) returns()
func (_Genesis *GenesisTransactorSession) UnapproveBlsKeyHashes(who common.Address, blsHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.UnapproveBlsKeyHashes(&_Genesis.TransactOpts, who, blsHashes)
}

// WhitelistAccount is a paid mutator transaction binding the contract method 0xa444502b.
//
// Solidity: function whitelistAccount(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisTransactor) WhitelistAccount(opts *bind.TransactOpts, who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "whitelistAccount", who, numberOfNodes)
}

// WhitelistAccount is a paid mutator transaction binding the contract method 0xa444502b.
//
// Solidity: function whitelistAccount(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisSession) WhitelistAccount(who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.WhitelistAccount(&_Genesis.TransactOpts, who, numberOfNodes)
}

// WhitelistAccount is a paid mutator transaction binding the contract method 0xa444502b.
//
// Solidity: function whitelistAccount(address who, uint256 numberOfNodes) returns()
func (_Genesis *GenesisTransactorSession) WhitelistAccount(who common.Address, numberOfNodes *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.WhitelistAccount(&_Genesis.TransactOpts, who, numberOfNodes)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Genesis *GenesisTransactor) Withdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "withdraw")
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Genesis *GenesisSession) Withdraw() (*types.Transaction, error) {
	return _Genesis.Contract.Withdraw(&_Genesis.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_Genesis *GenesisTransactorSession) Withdraw() (*types.Transaction, error) {
	return _Genesis.Contract.Withdraw(&_Genesis.TransactOpts)
}

// WithdrawDelegatedStake is a paid mutator transaction binding the contract method 0xecf3148c.
//
// Solidity: function withdrawDelegatedStake(uint256 amount) returns()
func (_Genesis *GenesisTransactor) WithdrawDelegatedStake(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "withdrawDelegatedStake", amount)
}

// WithdrawDelegatedStake is a paid mutator transaction binding the contract method 0xecf3148c.
//
// Solidity: function withdrawDelegatedStake(uint256 amount) returns()
func (_Genesis *GenesisSession) WithdrawDelegatedStake(amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.WithdrawDelegatedStake(&_Genesis.TransactOpts, amount)
}

// WithdrawDelegatedStake is a paid mutator transaction binding the contract method 0xecf3148c.
//
// Solidity: function withdrawDelegatedStake(uint256 amount) returns()
func (_Genesis *GenesisTransactorSession) WithdrawDelegatedStake(amount *big.Int) (*types.Transaction, error) {
	return _Genesis.Contract.WithdrawDelegatedStake(&_Genesis.TransactOpts, amount)
}

// WithdrawPerNodes is a paid mutator transaction binding the contract method 0x533962f0.
//
// Solidity: function withdrawPerNodes(bytes32[] blsKeyHashes) returns()
func (_Genesis *GenesisTransactor) WithdrawPerNodes(opts *bind.TransactOpts, blsKeyHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.contract.Transact(opts, "withdrawPerNodes", blsKeyHashes)
}

// WithdrawPerNodes is a paid mutator transaction binding the contract method 0x533962f0.
//
// Solidity: function withdrawPerNodes(bytes32[] blsKeyHashes) returns()
func (_Genesis *GenesisSession) WithdrawPerNodes(blsKeyHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.WithdrawPerNodes(&_Genesis.TransactOpts, blsKeyHashes)
}

// WithdrawPerNodes is a paid mutator transaction binding the contract method 0x533962f0.
//
// Solidity: function withdrawPerNodes(bytes32[] blsKeyHashes) returns()
func (_Genesis *GenesisTransactorSession) WithdrawPerNodes(blsKeyHashes [][32]byte) (*types.Transaction, error) {
	return _Genesis.Contract.WithdrawPerNodes(&_Genesis.TransactOpts, blsKeyHashes)
}

// GenesisOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Genesis contract.
type GenesisOwnershipTransferredIterator struct {
	Event *GenesisOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GenesisOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GenesisOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GenesisOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GenesisOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GenesisOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GenesisOwnershipTransferred represents a OwnershipTransferred event raised by the Genesis contract.
type GenesisOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Genesis *GenesisFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*GenesisOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Genesis.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &GenesisOwnershipTransferredIterator{contract: _Genesis.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Genesis *GenesisFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *GenesisOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Genesis.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GenesisOwnershipTransferred)
				if err := _Genesis.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Genesis *GenesisFilterer) ParseOwnershipTransferred(log types.Log) (*GenesisOwnershipTransferred, error) {
	event := new(GenesisOwnershipTransferred)
	if err := _Genesis.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// GenesisStakeDepositedIterator is returned from FilterStakeDeposited and is used to iterate over the raw logs and unpacked data for StakeDeposited events raised by the Genesis contract.
type GenesisStakeDepositedIterator struct {
	Event *GenesisStakeDeposited // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GenesisStakeDepositedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GenesisStakeDeposited)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GenesisStakeDeposited)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GenesisStakeDepositedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GenesisStakeDepositedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GenesisStakeDeposited represents a StakeDeposited event raised by the Genesis contract.
type GenesisStakeDeposited struct {
	Account common.Address
	Amount  *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterStakeDeposited is a free log retrieval operation binding the contract event 0x0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2.
//
// Solidity: event StakeDeposited(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) FilterStakeDeposited(opts *bind.FilterOpts, account []common.Address) (*GenesisStakeDepositedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _Genesis.contract.FilterLogs(opts, "StakeDeposited", accountRule)
	if err != nil {
		return nil, err
	}
	return &GenesisStakeDepositedIterator{contract: _Genesis.contract, event: "StakeDeposited", logs: logs, sub: sub}, nil
}

// WatchStakeDeposited is a free log subscription operation binding the contract event 0x0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2.
//
// Solidity: event StakeDeposited(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) WatchStakeDeposited(opts *bind.WatchOpts, sink chan<- *GenesisStakeDeposited, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _Genesis.contract.WatchLogs(opts, "StakeDeposited", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GenesisStakeDeposited)
				if err := _Genesis.contract.UnpackLog(event, "StakeDeposited", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStakeDeposited is a log parse operation binding the contract event 0x0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc2.
//
// Solidity: event StakeDeposited(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) ParseStakeDeposited(log types.Log) (*GenesisStakeDeposited, error) {
	event := new(GenesisStakeDeposited)
	if err := _Genesis.contract.UnpackLog(event, "StakeDeposited", log); err != nil {
		return nil, err
	}
	return event, nil
}

// GenesisStakeWithdrawnIterator is returned from FilterStakeWithdrawn and is used to iterate over the raw logs and unpacked data for StakeWithdrawn events raised by the Genesis contract.
type GenesisStakeWithdrawnIterator struct {
	Event *GenesisStakeWithdrawn // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GenesisStakeWithdrawnIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GenesisStakeWithdrawn)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GenesisStakeWithdrawn)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GenesisStakeWithdrawnIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GenesisStakeWithdrawnIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GenesisStakeWithdrawn represents a StakeWithdrawn event raised by the Genesis contract.
type GenesisStakeWithdrawn struct {
	Account common.Address
	Amount  *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterStakeWithdrawn is a free log retrieval operation binding the contract event 0x8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc.
//
// Solidity: event StakeWithdrawn(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) FilterStakeWithdrawn(opts *bind.FilterOpts, account []common.Address) (*GenesisStakeWithdrawnIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _Genesis.contract.FilterLogs(opts, "StakeWithdrawn", accountRule)
	if err != nil {
		return nil, err
	}
	return &GenesisStakeWithdrawnIterator{contract: _Genesis.contract, event: "StakeWithdrawn", logs: logs, sub: sub}, nil
}

// WatchStakeWithdrawn is a free log subscription operation binding the contract event 0x8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc.
//
// Solidity: event StakeWithdrawn(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) WatchStakeWithdrawn(opts *bind.WatchOpts, sink chan<- *GenesisStakeWithdrawn, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _Genesis.contract.WatchLogs(opts, "StakeWithdrawn", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GenesisStakeWithdrawn)
				if err := _Genesis.contract.UnpackLog(event, "StakeWithdrawn", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStakeWithdrawn is a log parse operation binding the contract event 0x8108595eb6bad3acefa9da467d90cc2217686d5c5ac85460f8b7849c840645fc.
//
// Solidity: event StakeWithdrawn(address indexed account, uint256 amount)
func (_Genesis *GenesisFilterer) ParseStakeWithdrawn(log types.Log) (*GenesisStakeWithdrawn, error) {
	event := new(GenesisStakeWithdrawn)
	if err := _Genesis.contract.UnpackLog(event, "StakeWithdrawn", log); err != nil {
		return nil, err
	}
	return event, nil
}

// GenesisStateChangedIterator is returned from FilterStateChanged and is used to iterate over the raw logs and unpacked data for StateChanged events raised by the Genesis contract.
type GenesisStateChangedIterator struct {
	Event *GenesisStateChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GenesisStateChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GenesisStateChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GenesisStateChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GenesisStateChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GenesisStateChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GenesisStateChanged represents a StateChanged event raised by the Genesis contract.
type GenesisStateChanged struct {
	FromState uint8
	ToState   uint8
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterStateChanged is a free log retrieval operation binding the contract event 0xe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8.
//
// Solidity: event StateChanged(uint8 fromState, uint8 toState)
func (_Genesis *GenesisFilterer) FilterStateChanged(opts *bind.FilterOpts) (*GenesisStateChangedIterator, error) {

	logs, sub, err := _Genesis.contract.FilterLogs(opts, "StateChanged")
	if err != nil {
		return nil, err
	}
	return &GenesisStateChangedIterator{contract: _Genesis.contract, event: "StateChanged", logs: logs, sub: sub}, nil
}

// WatchStateChanged is a free log subscription operation binding the contract event 0xe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8.
//
// Solidity: event StateChanged(uint8 fromState, uint8 toState)
func (_Genesis *GenesisFilterer) WatchStateChanged(opts *bind.WatchOpts, sink chan<- *GenesisStateChanged) (event.Subscription, error) {

	logs, sub, err := _Genesis.contract.WatchLogs(opts, "StateChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GenesisStateChanged)
				if err := _Genesis.contract.UnpackLog(event, "StateChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStateChanged is a log parse operation binding the contract event 0xe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8.
//
// Solidity: event StateChanged(uint8 fromState, uint8 toState)
func (_Genesis *GenesisFilterer) ParseStateChanged(log types.Log) (*GenesisStateChanged, error) {
	event := new(GenesisStateChanged)
	if err := _Genesis.contract.UnpackLog(event, "StateChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}
